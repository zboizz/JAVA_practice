/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.27
 * Generated at: 2019-12-23 01:12:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sun.javafx.fxml.BeanAdapter;
import java.util.Calendar;
import java.text.SimpleDateFormat;
import java.util.Vector;
import product.ProductBean;

public final class goods_005fmaster_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.sun.javafx.fxml.BeanAdapter");
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("java.util.Vector");
    _jspx_imports_classes.add("product.ProductBean");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      admin.ProductMgr amgr = null;
      amgr = (admin.ProductMgr) _jspx_page_context.getAttribute("amgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (amgr == null){
        amgr = new admin.ProductMgr();
        _jspx_page_context.setAttribute("amgr", amgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");

		request.setCharacterEncoding("EUC-KR");
		Vector<ProductBean> list = amgr.printPname();
		String pnameList[] = amgr.readPname();
		out.println(list.size());		   
		
		//Printing yymmdd
		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
		Calendar cal1 = Calendar.getInstance();	Calendar cal2 = Calendar.getInstance();
		int year = Integer.parseInt((sdf.format(cal2.getTime())).substring(0, 4));
		int month = Integer.parseInt((sdf.format(cal2.getTime())).substring(4, 6));
		int date = Integer.parseInt((sdf.format(cal2.getTime())).substring(6, 8));
		cal1.set(year ,month-1, date);	cal1.add(Calendar.MONTH, -1);
						
		int today1 = Integer.parseInt(sdf.format(cal1.getTime()));
		int today2 = Integer.parseInt(sdf.format(cal2.getTime()));			
		
		//need to search variable 
		String p_name = "";	int p_date1=0;	int p_date2=0;
		
		//if do Searching
		if(request.getParameter("p_name")!=null){
			p_name = request.getParameter("p_name");
			p_date1 = Integer.parseInt(request.getParameter("p_date1"));
			p_date2 = Integer.parseInt(request.getParameter("p_date2"));
		}
		
		//After searching, request first screen again
		if(request.getParameter("reload")!=null&&
		request.getParameter("reload").equals("true")){
			p_name = ""; p_date1=0; p_date2=0; 
		}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("table {border: 1px solid; border-collapse:collapse; \r\n");
      out.write("\t\t\twidth: 70%; text-align:center;}\r\n");
      out.write("td{border: 1px solid;}\r\n");
      out.write("thead{background:lightgray;}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> \r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css\">\r\n");
      out.write("\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js\"></script>\r\n");
      out.write("<script type =\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("var today = new Date( ) \r\n");
      out.write("document.write(today.getYear( ) , \r\n");
      out.write("               today.getMonth( )+1 , today.getDate( )) \r\n");
      out.write("\r\n");
      out.write("function check() {\r\n");
      out.write("\tf = document.SearchFrm;\r\n");
      out.write("\tif(f.p_name.value.length==0){\r\n");
      out.write("\t\talert(\"제품명을 선택하세요\");\r\n");
      out.write("\t\tf.p_name.focus();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif(f.p_date1.value.length==0 || f.p_date1.value.length!=8){\r\n");
      out.write("\t\talert(\"기간을 올바르게 입력해주세요 ex) 20191217\")\r\n");
      out.write("\t\tf.p_date1.focus();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction list() {\r\n");
      out.write("\t\tdocument.listFrm.action = \"goods_master.jsp\";\r\n");
      out.write("\t\tdocument.listFrm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tif(f.p_date2.value.length==0 || f.p_date2.value.length!=8){\r\n");
      out.write("\t\talert(\"기간을 올바르게 입력해주세요 ex) 20191217\")\r\n");
      out.write("\t\tf.p_date2.focus();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}f.submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function listSelect() {\r\n");
      out.write("\tf = document.SearchFrm;\r\n");
      out.write("\tpl = f.pnameList;\r\n");
      out.write("\tf.p_name.value = pl.options[pl.selectedIndex].value;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("/* checkbox javascript */\r\n");
      out.write(" \r\n");
      out.write(" function allChk() {\r\n");
      out.write("\tf= document.rFrm;\r\n");
      out.write("\tif(f.allCh.checked){\r\n");
      out.write("\t\tfor(i=0;i<f.fch.length;i++){\r\n");
      out.write("\t\t\t\t/*항목의 체크버튼(fch)들이 배열이기에*/\r\n");
      out.write("\t\t\tf.fch[i].checked = true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tf.delete.disabled = false;//버튼의 활성화\r\n");
      out.write("\t\tf.update.disabled = false;//버튼의 활성화\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\tfor(i=0;i<f.fch.length;i++){\r\n");
      out.write("\t\t\tf.fch[i].checked = false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tf.delete.disabled = true;\t//버튼의 비활성화\t\t\t\r\n");
      out.write("\t\tf.update.disabled = true;\t//버튼의 비활성화\t\t\t\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write(" function chk(){\r\n");
      out.write("\t\tf=document.rFrm;\r\n");
      out.write("\t\tfor(i=0; i<f.fch.length;i++){\r\n");
      out.write("\t\t\t//alert(f.fch[i].value);\r\n");
      out.write("\t\t\tif(f.fch[i].checked){ //fch 체크박스가 체크가 된 경우\r\n");
      out.write("\t\t\t\tf.delete.disabled = false;\r\n");
      out.write("\t\t\t\tf.update.disabled = false;\r\n");
      out.write("\t\t\treturn; //밑에 있는 체크박스의 체크 유무는 무의미\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tf.allCh.checked= false; //전체체크박스 해제\r\n");
      out.write("\t\tf.delete.disabled = true; //버튼 비활성화\r\n");
      out.write("\t\tf.update.disabled = true; //버튼 비활성화\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<h3>제품정보</h3>\r\n");
      out.write("\r\n");
      out.write("<form name = \"listFrm\">\r\n");
      out.write("\t<input type =\"hidden\"  name =\"reload\" value=\"true\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form name =\"SearchFrm\" method=\"get\" >\r\n");
      out.write("<input type = \"hidden\" name =\"fch\" value=\"0\">\t\r\n");
      out.write("<hr>\r\n");
      out.write("<h4>제품정보 검색</h4>\r\n");
      out.write("<table>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td >제품명</td>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<select name =\"pnameList\" onchange = \"listSelect()\">\r\n");
      out.write("\t\t<option value =\"\">제품명 선택</option>\r\n");
      out.write("\t\t");
for(int i=0; i<pnameList.length;i++){ 
      out.write("\r\n");
      out.write("\t\t<option value =\"");
      out.print(pnameList[i]);
      out.write('"');
      out.write('>');
      out.print(pnameList[i]);
      out.write("</option>\r\n");
      out.write("\t\t");
} 
      out.write("\t\t\r\n");
      out.write("\t\t</select>\t\t\r\n");
      out.write("\t\t<input name =\"p_name\" value=\"");
      out.print(p_name);
      out.write("\">\r\n");
      out.write("\t\t</td>\t\t\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>검색기간(등록일)</td>\t\t\r\n");
      out.write("\t\t<td>\t\r\n");
      out.write("\t\t\t<input name =\"p_date1\" size=\"20\"  placeholder=\"");
      out.print(today1);
      out.write("\" > &nbsp; ~ &nbsp;\r\n");
      out.write("\t\t\t<input name =\"p_date2\" size=\"20\" placeholder=\"");
      out.print(today2);
      out.write("\" >\t\t\t\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"search\" onclick=\"check()\">\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\t\r\n");
      out.write("</table>\r\n");
      out.write("\t\t\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\t<!-- <form name=rFrm action=\"goods_Proc.jsp?flag=delete\" enctype=\"multipart/form-data\"> -->\r\n");
      out.write("\t<form name=rFrm id=\"rFrame\" action=\"goods_masterProc.jsp\" enctype=\"multipart/form-data\">\r\n");
      out.write("<table>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t");

			//p_name = request.getParameter("p_name");
			//p_date1 = Integer.parseInt(request.getParameter("p_date1"));
			//p_date2 = Integer.parseInt(request.getParameter("p_date2"));
			Vector<ProductBean> slist = amgr.searchproduct(p_name, p_date1, p_date2);
			int listSize = slist.size();
			if(slist.isEmpty()){
				out.println(p_name);
				out.println(p_date1);
				out.println(p_date2);				
				out.println(slist.size());				
				out.println("검색결과없음");
			}else{
				
		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th><input type =\"checkbox\" name=\"allCh\" onclick=\"allChk()\" checked></th>\t\t\t\t\t\r\n");
      out.write("\t\t\t<th>제품코드</th>\r\n");
      out.write("\t\t\t<th>상품명</th>\r\n");
      out.write("\t\t\t<th>상품가격</th>\r\n");
      out.write("\t\t\t<th>등록일</th>\r\n");
      out.write("\t\t\t<th>판매여부</th>\r\n");
      out.write("\t\t\t<th>재고수량</th>\r\n");
      out.write("\t\t</tr>\t\t\t\r\n");
      out.write("\t\t\t");
 
			for(int i=0; i<slist.size(); i++){
				ProductBean pbean = slist.get(i);
				int p_code = pbean.getP_code();
		
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t<input type =\"checkbox\" name=\"fch\" value=\"");
      out.print(p_code);
      out.write("\" onclick=\"chk()\" checked></td>\t\t\t\t\t\t\r\n");
      out.write("\t\t\t<td><a href=\"goods_view.jsp?p_code=");
      out.print(pbean.getP_code());
      out.write('"');
      out.write('>');
      out.print(pbean.getP_code() );
      out.write("</a></td>\r\n");
      out.write("\t\t\t<td>");
      out.print(pbean.getP_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(pbean.getP_price() );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(pbean.getP_date() );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(pbean.getP_on_sale() );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(pbean.getSt_ava_qty() );
      out.write("</td>\t\t\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t");
}//--for 
      out.write('\r');
      out.write('\n');
      out.write('	');
}//--else 
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<input type =\"button\" name=\"update\" id=\"update_btn\" value=\"수정\" disabled>\r\n");
      out.write("\t\t<input type=\"button\" name=\"delete\" id=\"delete_btn\" value=\"삭제\" disabled>\r\n");
      out.write("\t\t<input type =\"button\" value=\"추가\" onclick =\"location.href='goods_insert.jsp'\">\t\r\n");
      out.write("\t\t<input type =\"hidden\" name=\"buffer\" id=\"buffer\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<script>\r\n");
      out.write("\r\n");
      out.write("\twindow.onload = function(){\r\n");
      out.write("\t\tfunction typeCheck(){\r\n");
      out.write("\t\t\tconst update_btn = document.querySelector('#update_btn');\r\n");
      out.write("\t\t\tconst delete_btn = document.querySelector('#delete_btn');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tupdate_btn.addEventListener('click', function(){\r\n");
      out.write("\t\t\t\tconst inputdata = \r\n");
      out.write("\t\t\t\t$('#buffer').val('update');\r\n");
      out.write("\t\t\t\t$('#rFrame').submit();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tdelete_btn.addEventListener('click',function(){\r\n");
      out.write("\t\t\t\t$('#buffer').val('delete');\r\n");
      out.write("\t\t\t\t$('#rFrame').submit();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\ttypeCheck();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\t\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
