/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.27
 * Generated at: 2019-12-17 08:26:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.order;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Order.OrderDetailBean;
import Product.ProductBean;
import Order.OrderBean;
import java.util.Vector;

public final class mypage_005forderlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Vector");
    _jspx_imports_classes.add("Order.OrderBean");
    _jspx_imports_classes.add("Product.ProductBean");
    _jspx_imports_classes.add("Order.OrderDetailBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
request.setCharacterEncoding("EUC-KR");
      out.write('\r');
      out.write('\n');
      Order.OrderMgr orderMgr = null;
      orderMgr = (Order.OrderMgr) _jspx_page_context.getAttribute("orderMgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (orderMgr == null){
        orderMgr = new Order.OrderMgr();
        _jspx_page_context.setAttribute("orderMgr", orderMgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      Product.ProductMgr pMgr = null;
      pMgr = (Product.ProductMgr) _jspx_page_context.getAttribute("pMgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (pMgr == null){
        pMgr = new Product.ProductMgr();
        _jspx_page_context.setAttribute("pMgr", pMgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');

		String id = (String)session.getAttribute("idKey");
		String msg = "";
		/* if(session.getAttribute("idKey")==null){
			msg="로그인이 필요한 페이지 입니다.";
		} */

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t//alert(\"");
      out.print(msg);
      out.write("\");\r\n");
      out.write("\tlocation.href = \"../index.jsp\";\r\n");
      out.write("</script>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../top.jsp", out, false);
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("table {border: 1px solid; border-collapse:collapse; \r\n");
      out.write("\t\t\twidth: 70%; text-align:center;}\r\n");
      out.write("td{border: 1px solid;}\r\n");
      out.write("thead{background:lightgray;}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<table>\r\n");
      out.write("\t<thead>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td colspan=\"5\">주문내역</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t</thead>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>주문번호</td>\r\n");
      out.write("\t\t<td>제품명</td>\r\n");
      out.write("\t\t<td>주문날짜</td>\r\n");
      out.write("\t\t<td>주문상태</td>\r\n");
      out.write("\t\t<td>주문방법</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("<!-- 주문내역 가져오기 -->\r\n");
      out.write("\t\t");

			Vector<OrderBean> vlist = orderMgr.getOrder(id);
			
			if(vlist.isEmpty()){
		
      out.write("\r\n");
      out.write("\t\t<tr> \r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"5\">\r\n");
      out.write("\t\t\t\t주문하신 물품이 없습니다.\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t");
} else{
			for(int i=0;i<vlist.size();i++){
				OrderBean order = vlist.get(i);
				int o_index = order.getO_index();
				Vector<OrderDetailBean> dvlist= orderMgr.getOrderCode(o_index);
				for(int j=0;j<dvlist.size();j++){
					OrderDetailBean detailOrder = dvlist.get(j);
					int p_code = detailOrder.getP_code();
					ProductBean pbean = pMgr.getProduct(p_code);
		
      out.write("\t\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>");
      out.print(order.getO_index() );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(pbean.getP_name());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(order.getO_date());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(order.getO_status());
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(order.getO_pay_method());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");
			
				}//---for
			}//---for
		}//---else
		
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("</table>\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../bottom.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
